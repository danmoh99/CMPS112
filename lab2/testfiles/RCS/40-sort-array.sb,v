head	1.2;
access;
symbols;
locks;
comment	@# @;


1.2
date	2019.02.01.20.54.01;	author -;	state -;
branches;
next	1.1;

1.1
date	2019.01.18.19.47.25;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@# $Id: 40-sort-array.sb,v 1.1 2019-01-18 11:47:25-08 - - $
#
# sort numbers
#
# Input is a sequence of numbers ending with end of file.
# User is assumed to have not more than 100 numbers.
# Note that nan <> nan, other was x = x for all x that is not nan.
#
        let size = 100
        dim a[size]
        let max = 0
read:   input x
        if eof <> 0 goto eof
        if x <> x goto error
        let max = max + 1
        let a[max] = x
        if max < size goto read
eof:
        print ""
        print "unsorted"
        let i = 1
prtlp:  print "a[", i, "]=", a[i]
        let i = i + 1
        if i <= max goto prtlp
        if i < 2 goto sorted

        let i = max
outer:  let j = 1 
inner:  if a[j] <= a[j + 1] goto noswap
        let t = a[j]
        let a[j] = a[j+1]
        let a[j+1]=t
noswap: let j = j + 1
        if j <= i - 1 goto inner
        let i = i - 1
        if i >= 2 goto outer

sorted: print ""
        print "sorted"
        let i = 1
sortlp: print "a[", i, "]=", a[i]
        let i = i + 1
        if i <= max goto sortlp
        goto stop
error:  print "Invalid input"
stop:
@


1.1
log
@-
@
text
@d1 1
a1 1
# $Id: 40-sort-array.sb,v 1.1 2019-01-17 17:24:45-08 - - $
d25 2
d33 1
a33 2
noswap:
        let j = j + 1
d37 2
a38 1
        print ""
@
